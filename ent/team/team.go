// Code generated by entc, DO NOT EDIT.

package team

const (
	// Label holds the string label denoting the team type in the database.
	Label = "team"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeHomeID holds the string denoting the home_id edge name in mutations.
	EdgeHomeID = "home_id"
	// EdgeAwayID holds the string denoting the away_id edge name in mutations.
	EdgeAwayID = "away_id"
	// Table holds the table name of the team in the database.
	Table = "teams"
	// HomeIDTable is the table that holds the home_id relation/edge.
	HomeIDTable = "matches"
	// HomeIDInverseTable is the table name for the Match entity.
	// It exists in this package in order to avoid circular dependency with the "match" package.
	HomeIDInverseTable = "matches"
	// HomeIDColumn is the table column denoting the home_id relation/edge.
	HomeIDColumn = "team_home_id"
	// AwayIDTable is the table that holds the away_id relation/edge.
	AwayIDTable = "matches"
	// AwayIDInverseTable is the table name for the Match entity.
	// It exists in this package in order to avoid circular dependency with the "match" package.
	AwayIDInverseTable = "matches"
	// AwayIDColumn is the table column denoting the away_id relation/edge.
	AwayIDColumn = "team_away_id"
)

// Columns holds all SQL columns for team fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Code generated by entc, DO NOT EDIT.

package team

const (
	// Label holds the string label denoting the team type in the database.
	Label = "team"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeHomeMatches holds the string denoting the home_matches edge name in mutations.
	EdgeHomeMatches = "home_matches"
	// EdgeAwayMatches holds the string denoting the away_matches edge name in mutations.
	EdgeAwayMatches = "away_matches"
	// Table holds the table name of the team in the database.
	Table = "teams"
	// HomeMatchesTable is the table that holds the home_matches relation/edge.
	HomeMatchesTable = "matches"
	// HomeMatchesInverseTable is the table name for the Match entity.
	// It exists in this package in order to avoid circular dependency with the "match" package.
	HomeMatchesInverseTable = "matches"
	// HomeMatchesColumn is the table column denoting the home_matches relation/edge.
	HomeMatchesColumn = "match_home_team"
	// AwayMatchesTable is the table that holds the away_matches relation/edge.
	AwayMatchesTable = "matches"
	// AwayMatchesInverseTable is the table name for the Match entity.
	// It exists in this package in order to avoid circular dependency with the "match" package.
	AwayMatchesInverseTable = "matches"
	// AwayMatchesColumn is the table column denoting the away_matches relation/edge.
	AwayMatchesColumn = "match_away_team"
)

// Columns holds all SQL columns for team fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
